name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust (for Hayagriva)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Hayagriva CLI
        run: cargo install hayagriva-cli

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: sveltekit

      - name: Cache CryptoBib data
        id: cache-cryptobib
        uses: actions/cache@v4
        with:
          path: |
            data/cryptobib.yaml
            data/cryptobib+abbrev.bib
          key: cryptobib-${{ hashFiles('scripts/fetch-and-convert.ts') }}-${{ github.run_number }}
          restore-keys: |
            cryptobib-${{ hashFiles('scripts/fetch-and-convert.ts') }}-
            cryptobib-

      - name: Fetch and convert CryptoBib data
        if: steps.cache-cryptobib.outputs.cache-hit != 'true'
        run: npm run fetch

      - name: Build search index
        run: npm run build:index

      - name: Build SvelteKit app
        env:
          BASE_PATH: /${{ github.event.repository.name }}
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4